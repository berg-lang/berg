  #
  # Precedence 1: prefix.:
  #
    #
    # Against precedence 1: prefix.:
    #
    #
    # prefix.:
    #


    #
    # Against precedence 2: . postfix.-- postfix.++
    #
    #
    # prefix.:
    #
    - Berg: "a . :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a . b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "."
        Right -> Bareword: b
    - Berg: ":a--"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: --
    - Berg: ":a++"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ++


    #
    # Against precedence 3: prefix.-- prefix.- prefix.+ prefix.++ prefix.!
    #
    #
    # prefix.:
    #
    - Berg: "--:a"
      Ast -> PrefixOperation:
        Operator: --
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
    - Berg: "-:a"
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
    - Berg: "+:a"
      Ast -> PrefixOperation:
        Operator: +
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
    - Berg: "++:a"
      Ast -> PrefixOperation:
        Operator: ++
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
    - Berg: "!:a"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a


    #
    # Against precedence 4: * % /
    #
    #
    # prefix.:
    #
    - Berg: "a * :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a * b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "*"
        Right -> Bareword: b
    - Berg: "a % :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a % b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "%"
        Right -> Bareword: b
    - Berg: "a / :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a / b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: /
        Right -> Bareword: b


    #
    # Against precedence 5: - +
    #
    #
    # prefix.:
    #
    - Berg: "a - :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a - b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "-"
        Right -> Bareword: b
    - Berg: "a + :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a + b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: +
        Right -> Bareword: b


    #
    # Against precedence 6: > <= >= <
    #
    #
    # prefix.:
    #
    - Berg: "a > :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a > b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ">"
        Right -> Bareword: b
    - Berg: "a <= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a <= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: <=
        Right -> Bareword: b
    - Berg: "a >= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a >= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ">="
        Right -> Bareword: b
    - Berg: "a < :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a < b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: <
        Right -> Bareword: b


    #
    # Against precedence 7: != ==
    #
    #
    # prefix.:
    #
    - Berg: "a != :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a != b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "!="
        Right -> Bareword: b
    - Berg: "a == :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a == b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ==
        Right -> Bareword: b


    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # prefix.:
    #
    - Berg: ":a?"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "?"
    - Berg: ":a+"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: +
    - Berg: ":a*"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "*"


    #
    # Against precedence 9: &&
    #
    #
    # prefix.:
    #
    - Berg: "a && :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a && b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "&&"
        Right -> Bareword: b


    #
    # Against precedence 10: ?? ||
    #
    #
    # prefix.:
    #
    - Berg: "a ?? :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a ?? b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "??"
        Right -> Bareword: b
    - Berg: "a || :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a || b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "||"
        Right -> Bareword: b


    #
    # Against precedence 11: ->
    #
    #
    # prefix.:
    #
    - Berg: "a -> :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a -> b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ->
        Right -> Bareword: b


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # prefix.:
    #
    - Berg: "a += :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a += b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: +=
        Right -> Bareword: b
    - Berg: "a *= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a *= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "*="
        Right -> Bareword: b
    - Berg: "a /= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a /= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: /=
        Right -> Bareword: b
    - Berg: "a %= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a %= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@3 = :"
        Right -> PrefixOperation:
          Operator: "1@5 = :"
          Right -> Bareword: b
    - Berg: ":a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "1@1 = :"
          Right -> Bareword: a
        Operator: "1@4 = :"
        Right -> Bareword: b
    - Berg: "a -= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a -= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: -=
        Right -> Bareword: b
    - Berg: "a &&= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a &&= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "&&="
        Right -> Bareword: b
    - Berg: "a ||= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a ||= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "||="
        Right -> Bareword: b
    - Berg: "a ??= :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a ??= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "??="
        Right -> Bareword: b
    - Berg: "a = :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a = b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: =
        Right -> Bareword: b


    #
    # Against precedence 13: , postfix.,
    #
    #
    # prefix.:
    #
    - Berg: "a , :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a , b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ","
        Right -> Bareword: b
    - Berg: ":a,"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ","


    #
    # Against precedence 14: &
    #
    #
    # prefix.:
    #
    - Berg: "a & :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a & b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "&"
        Right -> Bareword: b


    #
    # Against precedence 15: |
    #
    #
    # prefix.:
    #
    - Berg: "a | :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a | b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "|"
        Right -> Bareword: b


    #
    # Against precedence 16: call
    #
    #
    # prefix.:
    #
    - Berg: "a   :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a   b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "1@3+0 = "
        Right -> Bareword: b


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # prefix.:
    #
    - Berg: "a \n :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a \n b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: "\n"
        Right -> Bareword: b
    - Berg: ":a;"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ;
    - Berg: "a ; :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: b
    - Berg: ":a ; b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Operator: ;
        Right -> Bareword: b


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # prefix.:
    #
    - Berg: "{:a}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Close: "}"
    - Berg: "a : :b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@3 = :"
        Right -> PrefixOperation:
          Operator: "1@5 = :"
          Right -> Bareword: b
    - Berg: ":a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "1@1 = :"
          Right -> Bareword: a
        Operator: "1@4 = :"
        Right -> Bareword: b
    - Berg: "(:a)"
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PrefixOperation:
          Operator: ":"
          Right -> Bareword: a
        Close: )



  #
  # Precedence 2: . postfix.-- postfix.++
  #
    #
    # Against precedence 2: . postfix.-- postfix.++
    #
    #
    # .
    #
    - Berg: a . b . c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = .
          Right -> Bareword: b
        Operator: 1@7 = .
        Right -> Bareword: c
    - Berg: a . b--
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: --
    - Berg: a-- . b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "."
        Right -> Bareword: b
    - Berg: a . b++
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ++
    - Berg: a++ . b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "."
        Right -> Bareword: b

    #
    # postfix.--
    #
    - Berg: a----
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2-3 = --
        Operator: 1@4-5 = --
    - Berg: a--++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ++
    - Berg: a++--
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: --

    #
    # postfix.++
    #
    - Berg: a++++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2-3 = ++
        Operator: 1@4-5 = ++


    #
    # Against precedence 3: prefix.-- prefix.- prefix.+ prefix.++ prefix.!
    #
    #
    # .
    #
    - Berg: a . --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a . b
      Ast -> PrefixOperation:
        Operator: --
        Right -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
    - Berg: a . -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a . b
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
    - Berg: a . +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a . b
      Ast -> PrefixOperation:
        Operator: +
        Right -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
    - Berg: a . ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a . b
      Ast -> PrefixOperation:
        Operator: ++
        Right -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
    - Berg: a . !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a . b"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b

    #
    # postfix.--
    #
    - Berg: --a--
      Ast -> PrefixOperation:
        Operator: 1@1-2 = --
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@4-5 = --
    - Berg: -a--
      Ast -> PrefixOperation:
        Operator: 1@1 = -
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
    - Berg: +a--
      Ast -> PrefixOperation:
        Operator: +
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
    - Berg: ++a--
      Ast -> PrefixOperation:
        Operator: ++
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
    - Berg: "!a--"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: --

    #
    # postfix.++
    #
    - Berg: --a++
      Ast -> PrefixOperation:
        Operator: --
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
    - Berg: -a++
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
    - Berg: +a++
      Ast -> PrefixOperation:
        Operator: 1@1 = +
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
    - Berg: ++a++
      Ast -> PrefixOperation:
        Operator: 1@1-2 = ++
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@4-5 = ++
    - Berg: "!a++"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++


    #
    # Against precedence 4: * % /
    #
    #
    # .
    #
    - Berg: a . b * c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "*"
        Right -> Bareword: c
    - Berg: a * b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b % c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "%"
        Right -> Bareword: c
    - Berg: a % b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b / c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: /
        Right -> Bareword: c
    - Berg: a / b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a * b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- * b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "*"
        Right -> Bareword: b
    - Berg: a % b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- % b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "%"
        Right -> Bareword: b
    - Berg: a / b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- / b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: /
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a * b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ * b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "*"
        Right -> Bareword: b
    - Berg: a % b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ % b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "%"
        Right -> Bareword: b
    - Berg: a / b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ / b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: /
        Right -> Bareword: b


    #
    # Against precedence 5: - +
    #
    #
    # .
    #
    - Berg: a . b - c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "-"
        Right -> Bareword: c
    - Berg: a - b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b + c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: +
        Right -> Bareword: c
    - Berg: a + b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a - b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = -
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- - b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: 1@5 = -
        Right -> Bareword: b
    - Berg: a + b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- + b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: +
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a - b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ - b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "-"
        Right -> Bareword: b
    - Berg: a + b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = +
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ + b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: 1@5 = +
        Right -> Bareword: b


    #
    # Against precedence 6: > <= >= <
    #
    #
    # .
    #
    - Berg: a . b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c
    - Berg: a > b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a > b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- > b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ">"
        Right -> Bareword: b
    - Berg: a <= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- <= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: <=
        Right -> Bareword: b
    - Berg: a >= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- >= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ">="
        Right -> Bareword: b
    - Berg: a < b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- < b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: <
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a > b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ > b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ">"
        Right -> Bareword: b
    - Berg: a <= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ <= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: <=
        Right -> Bareword: b
    - Berg: a >= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ >= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ">="
        Right -> Bareword: b
    - Berg: a < b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ < b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: <
        Right -> Bareword: b


    #
    # Against precedence 7: != ==
    #
    #
    # .
    #
    - Berg: a . b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a != b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- != b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "!="
        Right -> Bareword: b
    - Berg: a == b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- == b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ==
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a != b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ != b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "!="
        Right -> Bareword: b
    - Berg: a == b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ == b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ==
        Right -> Bareword: b


    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # .
    #
    - Berg: a . b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? . b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "."
        Right -> Bareword: b
    - Berg: a . b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: +
    - Berg: a+ . b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "."
        Right -> Bareword: b
    - Berg: a . b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* . b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "."
        Right -> Bareword: b

    #
    # postfix.--
    #
    - Berg: a--?
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "?"
    - Berg: a?--
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: --
    - Berg: a--+
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: +
    - Berg: a+--
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: --
    - Berg: a--*
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "*"
    - Berg: a*--
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: --

    #
    # postfix.++
    #
    - Berg: a++?
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "?"
    - Berg: a?++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ++
    - Berg: a+++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: 1@4 = +
    - Berg: a+ ++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = +
        Operator: ++
    - Berg: a++*
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "*"
    - Berg: a*++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ++


    #
    # Against precedence 9: &&
    #
    #
    # .
    #
    - Berg: a . b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a && b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- && b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "&&"
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a && b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ && b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "&&"
        Right -> Bareword: b


    #
    # Against precedence 10: ?? ||
    #
    #
    # .
    #
    - Berg: a . b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a ?? b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- ?? b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- || b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "||"
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a ?? b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ ?? b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ || b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "||"
        Right -> Bareword: b


    #
    # Against precedence 11: ->
    #
    #
    # .
    #
    - Berg: a . b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a -> b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- -> b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ->
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a -> b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ -> b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ->
        Right -> Bareword: b


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # .
    #
    - Berg: a . b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: "a . b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b . c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a += b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- += b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- *= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- /= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- %= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : b--"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: "a-- : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- -= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- &&= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- ||= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- ??= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- = b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: =
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a += b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ += b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ *= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ /= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ %= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : b++"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: "a++ : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ -= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ &&= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ ||= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ ??= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ = b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: =
        Right -> Bareword: b


    #
    # Against precedence 13: , postfix.,
    #
    #
    # .
    #
    - Berg: a . b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ","
    - Berg: a, . b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "."
        Right -> Bareword: b

    #
    # postfix.--
    #
    - Berg: a , b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- , b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ","
        Right -> Bareword: b
    - Berg: a--,
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ","
    - Berg: a,--
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: --

    #
    # postfix.++
    #
    - Berg: a , b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ , b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ","
        Right -> Bareword: b
    - Berg: a++,
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ","
    - Berg: a,++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ++


    #
    # Against precedence 14: &
    #
    #
    # .
    #
    - Berg: a . b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a & b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- & b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "&"
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a & b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ & b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "&"
        Right -> Bareword: b


    #
    # Against precedence 15: |
    #
    #
    # .
    #
    - Berg: a . b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a | b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- | b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "|"
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a | b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ | b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "|"
        Right -> Bareword: b


    #
    # Against precedence 16: call
    #
    #
    # .
    #
    - Berg: a . b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: a   b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a--   b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "1@4+0 = "
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: a   b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++   b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "1@4+0 = "
        Right -> Bareword: b


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # .
    #
    - Berg: "a . b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b . c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: a . b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ;
    - Berg: a; . b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "."
        Right -> Bareword: b
    - Berg: a . b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b . c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c

    #
    # postfix.--
    #
    - Berg: "a \n b--"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: "a-- \n b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: "\n"
        Right -> Bareword: b
    - Berg: a--;
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ;
    - Berg: a;--
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: --
    - Berg: a ; b--
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: a-- ; b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ;
        Right -> Bareword: b

    #
    # postfix.++
    #
    - Berg: "a \n b++"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: "a++ \n b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: "\n"
        Right -> Bareword: b
    - Berg: a++;
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ;
    - Berg: a;++
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ++
    - Berg: a ; b++
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: a++ ; b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ;
        Right -> Bareword: b


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # .
    #
    - Berg: "{a} . b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "."
        Right -> Bareword: b
    - Berg: a . {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a . b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Close: "}"
    - Berg: "a . b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b . c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "."
          Right -> Bareword: c
    - Berg: (a) . b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "."
        Right -> Bareword: b
    - Berg: a . (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "."
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a . b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "."
          Right -> Bareword: b
        Close: )

    #
    # postfix.--
    #
    - Berg: "{a}--"
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: --
    - Berg: "{a--}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Close: "}"
    - Berg: "a : b--"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: --
    - Berg: "a-- : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Operator: ":"
        Right -> Bareword: b
    - Berg: (a)--
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: --
    - Berg: (a--)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: --
        Close: )

    #
    # postfix.++
    #
    - Berg: "{a}++"
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ++
    - Berg: "{a++}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Close: "}"
    - Berg: "a : b++"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ++
    - Berg: "a++ : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Operator: ":"
        Right -> Bareword: b
    - Berg: (a)++
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ++
    - Berg: (a++)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: ++
        Close: )



  #
  # Precedence 3: prefix.-- prefix.- prefix.+ prefix.++ prefix.!
  #
    #
    # Against precedence 3: prefix.-- prefix.- prefix.+ prefix.++ prefix.!
    #
    #
    # prefix.--
    #
    - Berg: ----a
      Ast -> PrefixOperation:
        Operator: 1@1-2 = --
        Right -> PrefixOperation:
          Operator: 1@3-4 = --
          Right -> Bareword: a
    - Berg: ----a
      Ast -> PrefixOperation:
        Operator: 1@1-2 = --
        Right -> PrefixOperation:
          Operator: 1@3-4 = --
          Right -> Bareword: a
    - Berg: ---a
      Ast -> PrefixOperation:
        Operator: --
        Right -> PrefixOperation:
          Operator: 1@3 = -
          Right -> Bareword: a
    - Berg: "- --a"
      Ast -> PrefixOperation:
        Operator: 1@1 = -
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
    - Berg: --+a
      Ast -> PrefixOperation:
        Operator: --
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
    - Berg: +--a
      Ast -> PrefixOperation:
        Operator: +
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
    - Berg: --++a
      Ast -> PrefixOperation:
        Operator: --
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
    - Berg: ++--a
      Ast -> PrefixOperation:
        Operator: ++
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
    - Berg: --!a
      Ast -> PrefixOperation:
        Operator: --
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
    - Berg: "!--a"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: a

    #
    # prefix.-
    #
    - Berg: "- -a"
      Ast -> PrefixOperation:
        Operator: 1@1 = -
        Right -> PrefixOperation:
          Operator: 1@3 = -
          Right -> Bareword: a
    - Berg: "- -a"
      Ast -> PrefixOperation:
        Operator: 1@1 = -
        Right -> PrefixOperation:
          Operator: 1@3 = -
          Right -> Bareword: a
    - Berg: -+a
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
    - Berg: +-a
      Ast -> PrefixOperation:
        Operator: +
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
    - Berg: -++a
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
    - Berg: ++-a
      Ast -> PrefixOperation:
        Operator: ++
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
    - Berg: -!a
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
    - Berg: "!-a"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a

    #
    # prefix.+
    #
    - Berg: + +a
      Ast -> PrefixOperation:
        Operator: 1@1 = +
        Right -> PrefixOperation:
          Operator: 1@3 = +
          Right -> Bareword: a
    - Berg: + +a
      Ast -> PrefixOperation:
        Operator: 1@1 = +
        Right -> PrefixOperation:
          Operator: 1@3 = +
          Right -> Bareword: a
    - Berg: + ++a
      Ast -> PrefixOperation:
        Operator: 1@1 = +
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
    - Berg: +++a
      Ast -> PrefixOperation:
        Operator: ++
        Right -> PrefixOperation:
          Operator: 1@3 = +
          Right -> Bareword: a
    - Berg: +!a
      Ast -> PrefixOperation:
        Operator: +
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
    - Berg: "!+a"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: a

    #
    # prefix.++
    #
    - Berg: ++++a
      Ast -> PrefixOperation:
        Operator: 1@1-2 = ++
        Right -> PrefixOperation:
          Operator: 1@3-4 = ++
          Right -> Bareword: a
    - Berg: ++++a
      Ast -> PrefixOperation:
        Operator: 1@1-2 = ++
        Right -> PrefixOperation:
          Operator: 1@3-4 = ++
          Right -> Bareword: a
    - Berg: ++!a
      Ast -> PrefixOperation:
        Operator: ++
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
    - Berg: "!++a"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a

    #
    # prefix.!
    #
    - Berg: "!!a"
      Ast -> PrefixOperation:
        Operator: 1@1 = !
        Right -> PrefixOperation:
          Operator: 1@2 = !
          Right -> Bareword: a
    - Berg: "!!a"
      Ast -> PrefixOperation:
        Operator: 1@1 = !
        Right -> PrefixOperation:
          Operator: 1@2 = !
          Right -> Bareword: a


    #
    # Against precedence 4: * % /
    #
    #
    # prefix.--
    #
    - Berg: a * --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a * b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "*"
        Right -> Bareword: b
    - Berg: a % --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a % b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "%"
        Right -> Bareword: b
    - Berg: a / --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a / b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: /
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a * -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a * b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "*"
        Right -> Bareword: b
    - Berg: a % -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a % b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "%"
        Right -> Bareword: b
    - Berg: a / -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a / b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: /
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a * +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a * b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "*"
        Right -> Bareword: b
    - Berg: a % +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a % b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "%"
        Right -> Bareword: b
    - Berg: a / +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a / b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: /
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a * ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a * b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "*"
        Right -> Bareword: b
    - Berg: a % ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a % b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "%"
        Right -> Bareword: b
    - Berg: a / ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a / b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: /
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a * !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a * b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "*"
        Right -> Bareword: b
    - Berg: a % !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a % b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "%"
        Right -> Bareword: b
    - Berg: a / !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a / b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: /
        Right -> Bareword: b


    #
    # Against precedence 5: - +
    #
    #
    # prefix.--
    #
    - Berg: a - --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = -
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a - b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: 1@5 = -
        Right -> Bareword: b
    - Berg: a + --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a + b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: +
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a - -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = -
        Right -> PrefixOperation:
          Operator: 1@5 = -
          Right -> Bareword: b
    - Berg: -a - b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: 1@1 = -
          Right -> Bareword: a
        Operator: 1@4 = -
        Right -> Bareword: b
    - Berg: a + -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a + b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: +
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a - +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a - b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "-"
        Right -> Bareword: b
    - Berg: a + +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = +
        Right -> PrefixOperation:
          Operator: 1@5 = +
          Right -> Bareword: b
    - Berg: +a + b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: 1@1 = +
          Right -> Bareword: a
        Operator: 1@4 = +
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a - ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a - b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "-"
        Right -> Bareword: b
    - Berg: a + ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = +
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a + b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: 1@5 = +
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a - !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a - b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "-"
        Right -> Bareword: b
    - Berg: a + !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a + b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: +
        Right -> Bareword: b


    #
    # Against precedence 6: > <= >= <
    #
    #
    # prefix.--
    #
    - Berg: a > --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a > b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ">"
        Right -> Bareword: b
    - Berg: a <= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a <= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: <=
        Right -> Bareword: b
    - Berg: a >= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a >= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ">="
        Right -> Bareword: b
    - Berg: a < --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a < b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: <
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a > -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a > b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ">"
        Right -> Bareword: b
    - Berg: a <= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a <= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: <=
        Right -> Bareword: b
    - Berg: a >= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a >= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ">="
        Right -> Bareword: b
    - Berg: a < -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a < b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: <
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a > +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a > b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ">"
        Right -> Bareword: b
    - Berg: a <= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a <= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: <=
        Right -> Bareword: b
    - Berg: a >= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a >= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ">="
        Right -> Bareword: b
    - Berg: a < +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a < b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: <
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a > ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a > b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ">"
        Right -> Bareword: b
    - Berg: a <= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a <= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: <=
        Right -> Bareword: b
    - Berg: a >= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a >= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ">="
        Right -> Bareword: b
    - Berg: a < ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a < b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: <
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a > !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a > b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ">"
        Right -> Bareword: b
    - Berg: a <= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a <= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: <=
        Right -> Bareword: b
    - Berg: a >= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a >= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ">="
        Right -> Bareword: b
    - Berg: a < !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a < b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: <
        Right -> Bareword: b


    #
    # Against precedence 7: != ==
    #
    #
    # prefix.--
    #
    - Berg: a != --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a != b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "!="
        Right -> Bareword: b
    - Berg: a == --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a == b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ==
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a != -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a != b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "!="
        Right -> Bareword: b
    - Berg: a == -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a == b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ==
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a != +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a != b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "!="
        Right -> Bareword: b
    - Berg: a == +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a == b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ==
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a != ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a != b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "!="
        Right -> Bareword: b
    - Berg: a == ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a == b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ==
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a != !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> PrefixOperation:
          Operator: 1@6 = !
          Right -> Bareword: b
    - Berg: "!a != b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: 1@1 = !
          Right -> Bareword: a
        Operator: "!="
        Right -> Bareword: b
    - Berg: a == !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a == b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ==
        Right -> Bareword: b


    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # prefix.--
    #
    - Berg: --a?
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "?"
    - Berg: --a+
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: +
    - Berg: --a*
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "*"

    #
    # prefix.-
    #
    - Berg: -a?
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "?"
    - Berg: -a+
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: +
    - Berg: -a*
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "*"

    #
    # prefix.+
    #
    - Berg: +a?
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "?"
    - Berg: +a+
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: 1@1 = +
          Right -> Bareword: a
        Operator: 1@3 = +
    - Berg: +a*
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "*"

    #
    # prefix.++
    #
    - Berg: ++a?
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "?"
    - Berg: ++a+
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: 1@4 = +
    - Berg: ++a*
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "*"

    #
    # prefix.!
    #
    - Berg: "!a?"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "?"
    - Berg: "!a+"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: +
    - Berg: "!a*"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "*"


    #
    # Against precedence 9: &&
    #
    #
    # prefix.--
    #
    - Berg: a && --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a && b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "&&"
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a && -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a && b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "&&"
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a && +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a && b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "&&"
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a && ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a && b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "&&"
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a && !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a && b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "&&"
        Right -> Bareword: b


    #
    # Against precedence 10: ?? ||
    #
    #
    # prefix.--
    #
    - Berg: a ?? --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a ?? b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a || b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "||"
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a ?? -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a ?? b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a || b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "||"
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a ?? +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a ?? b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a || b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "||"
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a ?? ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a ?? b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a || b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "||"
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a ?? !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a ?? b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a || b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "||"
        Right -> Bareword: b


    #
    # Against precedence 11: ->
    #
    #
    # prefix.--
    #
    - Berg: a -> --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a -> b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ->
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a -> -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PrefixOperation:
          Operator: 1@6 = -
          Right -> Bareword: b
    - Berg: -a -> b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: 1@1 = -
          Right -> Bareword: a
        Operator: ->
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a -> +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a -> b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ->
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a -> ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a -> b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ->
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a -> !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a -> b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ->
        Right -> Bareword: b


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # prefix.--
    #
    - Berg: a += --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a += b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a *= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a /= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a %= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : --b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: "--a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a -= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a &&= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a ||= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a ??= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a = b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: =
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a += -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a += b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a *= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a /= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a %= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : -b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: "-a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PrefixOperation:
          Operator: 1@6 = -
          Right -> Bareword: b
    - Berg: -a -= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: 1@1 = -
          Right -> Bareword: a
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a &&= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a ||= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a ??= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a = b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: =
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a += +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PrefixOperation:
          Operator: 1@6 = +
          Right -> Bareword: b
    - Berg: +a += b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: 1@1 = +
          Right -> Bareword: a
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a *= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a /= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a %= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : +b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: "+a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a -= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a &&= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a ||= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a ??= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a = b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: =
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a += ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a += b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a *= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a /= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a %= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : ++b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: "++a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a -= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a &&= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a ||= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a ??= b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a = b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: =
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a += !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a += b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a *= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a /= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a %= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : !b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a -= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a &&= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a ||= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a ??= b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a = b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: =
        Right -> Bareword: b


    #
    # Against precedence 13: , postfix.,
    #
    #
    # prefix.--
    #
    - Berg: a , --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a , b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ","
        Right -> Bareword: b
    - Berg: --a,
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ","

    #
    # prefix.-
    #
    - Berg: a , -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a , b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ","
        Right -> Bareword: b
    - Berg: -a,
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ","

    #
    # prefix.+
    #
    - Berg: a , +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a , b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ","
        Right -> Bareword: b
    - Berg: +a,
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ","

    #
    # prefix.++
    #
    - Berg: a , ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a , b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ","
        Right -> Bareword: b
    - Berg: ++a,
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ","

    #
    # prefix.!
    #
    - Berg: a , !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a , b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ","
        Right -> Bareword: b
    - Berg: "!a,"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ","


    #
    # Against precedence 14: &
    #
    #
    # prefix.--
    #
    - Berg: a & --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a & b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "&"
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a & -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a & b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "&"
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a & +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a & b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "&"
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a & ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a & b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "&"
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a & !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a & b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "&"
        Right -> Bareword: b


    #
    # Against precedence 15: |
    #
    #
    # prefix.--
    #
    - Berg: a | --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a | b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "|"
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a | -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a | b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "|"
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a | +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a | b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "|"
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a | ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a | b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "|"
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a | !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a | b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "|"
        Right -> Bareword: b


    #
    # Against precedence 16: call
    #
    #
    # prefix.--
    #
    - Berg: a   --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a   b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "1@4+0 = "
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: a   -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a   b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "1@3+0 = "
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: a   +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a   b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "1@3+0 = "
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: a   ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a   b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "1@4+0 = "
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: a   !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a   b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "1@3+0 = "
        Right -> Bareword: b


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # prefix.--
    #
    - Berg: "a \n --b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: "--a \n b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: "\n"
        Right -> Bareword: b
    - Berg: --a;
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ;
    - Berg: a ; --b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: --a ; b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ;
        Right -> Bareword: b

    #
    # prefix.-
    #
    - Berg: "a \n -b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: "-a \n b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: "\n"
        Right -> Bareword: b
    - Berg: -a;
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ;
    - Berg: a ; -b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: -a ; b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ;
        Right -> Bareword: b

    #
    # prefix.+
    #
    - Berg: "a \n +b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: "+a \n b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: "\n"
        Right -> Bareword: b
    - Berg: +a;
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ;
    - Berg: a ; +b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: +a ; b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ;
        Right -> Bareword: b

    #
    # prefix.++
    #
    - Berg: "a \n ++b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: "++a \n b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: "\n"
        Right -> Bareword: b
    - Berg: ++a;
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ;
    - Berg: a ; ++b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: ++a ; b
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ;
        Right -> Bareword: b

    #
    # prefix.!
    #
    - Berg: "a \n !b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a \n b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: "\n"
        Right -> Bareword: b
    - Berg: "!a;"
      Ast -> PostfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ;
    - Berg: a ; !b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a ; b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ;
        Right -> Bareword: b


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # prefix.--
    #
    - Berg: --{a}
      Ast -> PrefixOperation:
        Operator: --
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
    - Berg: "{--a}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Close: "}"
    - Berg: "a : --b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: --
          Right -> Bareword: b
    - Berg: "--a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: --(a)
      Ast -> PrefixOperation:
        Operator: --
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
    - Berg: (--a)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PrefixOperation:
          Operator: --
          Right -> Bareword: a
        Close: )

    #
    # prefix.-
    #
    - Berg: -{a}
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
    - Berg: "{-a}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Close: "}"
    - Berg: "a : -b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: "-a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: -(a)
      Ast -> PrefixOperation:
        Operator: "-"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
    - Berg: (-a)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: a
        Close: )

    #
    # prefix.+
    #
    - Berg: +{a}
      Ast -> PrefixOperation:
        Operator: +
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
    - Berg: "{+a}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Close: "}"
    - Berg: "a : +b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: "+a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: +(a)
      Ast -> PrefixOperation:
        Operator: +
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
    - Berg: (+a)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PrefixOperation:
          Operator: +
          Right -> Bareword: a
        Close: )

    #
    # prefix.++
    #
    - Berg: ++{a}
      Ast -> PrefixOperation:
        Operator: ++
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
    - Berg: "{++a}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Close: "}"
    - Berg: "a : ++b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: ++
          Right -> Bareword: b
    - Berg: "++a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: ++(a)
      Ast -> PrefixOperation:
        Operator: ++
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
    - Berg: (++a)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PrefixOperation:
          Operator: ++
          Right -> Bareword: a
        Close: )

    #
    # prefix.!
    #
    - Berg: "!{a}"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
    - Berg: "{!a}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Close: "}"
    - Berg: "a : !b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: b
    - Berg: "!a : b"
      Ast -> InfixOperation:
        Left -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Operator: ":"
        Right -> Bareword: b
    - Berg: "!(a)"
      Ast -> PrefixOperation:
        Operator: "!"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
    - Berg: (!a)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PrefixOperation:
          Operator: "!"
          Right -> Bareword: a
        Close: )



  #
  # Precedence 4: * % /
  #
    #
    # Against precedence 4: * % /
    #
    #
    # *
    #
    - Berg: a * b * c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = *
          Right -> Bareword: b
        Operator: 1@7 = *
        Right -> Bareword: c
    - Berg: a * b % c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "%"
        Right -> Bareword: c
    - Berg: a % b * c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "*"
        Right -> Bareword: c
    - Berg: a * b / c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: /
        Right -> Bareword: c
    - Berg: a / b * c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "*"
        Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b % c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = %
          Right -> Bareword: b
        Operator: 1@7 = %
        Right -> Bareword: c
    - Berg: a % b / c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: /
        Right -> Bareword: c
    - Berg: a / b % c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "%"
        Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b / c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = /
          Right -> Bareword: b
        Operator: 1@7 = /
        Right -> Bareword: c


    #
    # Against precedence 5: - +
    #
    #
    # *
    #
    - Berg: a * b - c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "-"
        Right -> Bareword: c
    - Berg: a - b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b + c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: +
        Right -> Bareword: c
    - Berg: a + b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b - c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "-"
        Right -> Bareword: c
    - Berg: a - b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b + c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: +
        Right -> Bareword: c
    - Berg: a + b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b - c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "-"
        Right -> Bareword: c
    - Berg: a - b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b + c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: +
        Right -> Bareword: c
    - Berg: a + b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 6: > <= >= <
    #
    #
    # *
    #
    - Berg: a * b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c
    - Berg: a > b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c
    - Berg: a > b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c
    - Berg: a > b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 7: != ==
    #
    #
    # *
    #
    - Berg: a * b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # *
    #
    - Berg: a * b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? * b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "*"
        Right -> Bareword: b
    - Berg: a * b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: +
    - Berg: a+ * b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "*"
        Right -> Bareword: b
    - Berg: a * b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = *
          Right -> Bareword: b
        Operator: 1@6 = *
    - Berg: a* * b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = *
        Operator: 1@4 = *
        Right -> Bareword: b

    #
    # %
    #
    - Berg: a % b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? % b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "%"
        Right -> Bareword: b
    - Berg: a % b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: +
    - Berg: a+ % b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "%"
        Right -> Bareword: b
    - Berg: a % b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* % b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "%"
        Right -> Bareword: b

    #
    # /
    #
    - Berg: a / b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? / b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: /
        Right -> Bareword: b
    - Berg: a / b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: +
    - Berg: a+ / b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: /
        Right -> Bareword: b
    - Berg: a / b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* / b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: /
        Right -> Bareword: b


    #
    # Against precedence 9: &&
    #
    #
    # *
    #
    - Berg: a * b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 10: ?? ||
    #
    #
    # *
    #
    - Berg: a * b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 11: ->
    #
    #
    # *
    #
    - Berg: a * b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # *
    #
    - Berg: a * b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = *
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = *
          Right -> Bareword: c
    - Berg: a * b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: "a * b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b * c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = %
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = %
          Right -> Bareword: c
    - Berg: "a % b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b % c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = /
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = /
          Right -> Bareword: c
    - Berg: a / b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: "a / b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b / c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # *
    #
    - Berg: a * b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ","
    - Berg: a, * b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "*"
        Right -> Bareword: b

    #
    # %
    #
    - Berg: a % b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ","
    - Berg: a, % b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "%"
        Right -> Bareword: b

    #
    # /
    #
    - Berg: a / b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ","
    - Berg: a, / b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: /
        Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # *
    #
    - Berg: a * b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # *
    #
    - Berg: a * b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # *
    #
    - Berg: a * b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: a % b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: a / b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # *
    #
    - Berg: "a * b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b * c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: a * b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; * b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "*"
        Right -> Bareword: b
    - Berg: a * b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b * c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c

    #
    # %
    #
    - Berg: "a % b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b % c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: a % b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; % b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "%"
        Right -> Bareword: b
    - Berg: a % b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b % c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c

    #
    # /
    #
    - Berg: "a / b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b / c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: a / b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ;
    - Berg: a; / b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: /
        Right -> Bareword: b
    - Berg: a / b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b / c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # *
    #
    - Berg: "{a} * b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "*"
        Right -> Bareword: b
    - Berg: a * {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a * b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a * b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b * c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*"
          Right -> Bareword: c
    - Berg: (a) * b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "*"
        Right -> Bareword: b
    - Berg: a * (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a * b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "*"
          Right -> Bareword: b
        Close: )

    #
    # %
    #
    - Berg: "{a} % b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "%"
        Right -> Bareword: b
    - Berg: a % {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a % b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a % b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b % c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%"
          Right -> Bareword: c
    - Berg: (a) % b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "%"
        Right -> Bareword: b
    - Berg: a % (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a % b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "%"
          Right -> Bareword: b
        Close: )

    #
    # /
    #
    - Berg: "{a} / b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: /
        Right -> Bareword: b
    - Berg: a / {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a / b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Close: "}"
    - Berg: "a / b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b / c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /
          Right -> Bareword: c
    - Berg: (a) / b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: /
        Right -> Bareword: b
    - Berg: a / (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a / b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: /
          Right -> Bareword: b
        Close: )



  #
  # Precedence 5: - +
  #
    #
    # Against precedence 5: - +
    #
    #
    # -
    #
    - Berg: a - b - c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = -
          Right -> Bareword: b
        Operator: 1@7 = -
        Right -> Bareword: c
    - Berg: a - b + c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: +
        Right -> Bareword: c
    - Berg: a + b - c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "-"
        Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b + c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = +
          Right -> Bareword: b
        Operator: 1@7 = +
        Right -> Bareword: c


    #
    # Against precedence 6: > <= >= <
    #
    #
    # -
    #
    - Berg: a - b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c
    - Berg: a > b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c
    - Berg: a > b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 7: != ==
    #
    #
    # -
    #
    - Berg: a - b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # -
    #
    - Berg: a - b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? - b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "-"
        Right -> Bareword: b
    - Berg: a - b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: +
    - Berg: a+ - b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "-"
        Right -> Bareword: b
    - Berg: a - b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* - b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "-"
        Right -> Bareword: b

    #
    # +
    #
    - Berg: a + b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? + b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: +
        Right -> Bareword: b
    - Berg: a + b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = +
          Right -> Bareword: b
        Operator: 1@6 = +
    - Berg: a+ + b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = +
        Operator: 1@4 = +
        Right -> Bareword: b
    - Berg: a + b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* + b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: +
        Right -> Bareword: b


    #
    # Against precedence 9: &&
    #
    #
    # -
    #
    - Berg: a - b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 10: ?? ||
    #
    #
    # -
    #
    - Berg: a - b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 11: ->
    #
    #
    # -
    #
    - Berg: a - b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = -
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = -
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # -
    #
    - Berg: a - b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: "a - b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b - c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = -
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = -
          Right -> Bareword: c
    - Berg: a - b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = +
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = +
          Right -> Bareword: c
    - Berg: a + b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: "a + b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b + c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # -
    #
    - Berg: a - b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ","
    - Berg: a, - b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b

    #
    # +
    #
    - Berg: a + b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ","
    - Berg: a, + b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # -
    #
    - Berg: a - b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # -
    #
    - Berg: a - b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # -
    #
    - Berg: a - b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: a + b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # -
    #
    - Berg: "a - b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b - c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: a - b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; - b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: "-"
          Right -> Bareword: b
    - Berg: a - b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b - c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c

    #
    # +
    #
    - Berg: "a + b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b + c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: a + b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ;
    - Berg: a; + b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PrefixOperation:
          Operator: +
          Right -> Bareword: b
    - Berg: a + b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b + c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # -
    #
    - Berg: "{a} - b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "-"
        Right -> Bareword: b
    - Berg: a - {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a - b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a - b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b - c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "-"
          Right -> Bareword: c
    - Berg: (a) - b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "-"
        Right -> Bareword: b
    - Berg: a - (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "-"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a - b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "-"
          Right -> Bareword: b
        Close: )

    #
    # +
    #
    - Berg: "{a} + b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: +
        Right -> Bareword: b
    - Berg: a + {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a + b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Close: "}"
    - Berg: "a + b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b + c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +
          Right -> Bareword: c
    - Berg: (a) + b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: +
        Right -> Bareword: b
    - Berg: a + (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a + b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: +
          Right -> Bareword: b
        Close: )



  #
  # Precedence 6: > <= >= <
  #
    #
    # Against precedence 6: > <= >= <
    #
    #
    # >
    #
    - Berg: a > b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = >
          Right -> Bareword: b
        Operator: 1@7 = >
        Right -> Bareword: c
    - Berg: a > b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c
    - Berg: a > b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = >
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: 1@8 = >
        Right -> Bareword: c
    - Berg: a > b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b > c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ">"
        Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = <=
          Right -> Bareword: b
        Operator: 1@8-9 = <=
        Right -> Bareword: c
    - Berg: a <= b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c
    - Berg: a >= b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c
    - Berg: a <= b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: 1@8 = <
        Right -> Bareword: c
    - Berg: a < b <= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = <
          Right -> Bareword: b
        Operator: <=
        Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = >=
          Right -> Bareword: b
        Operator: 1@8-9 = >=
        Right -> Bareword: c
    - Berg: a >= b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: <
        Right -> Bareword: c
    - Berg: a < b >= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ">="
        Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b < c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = <
          Right -> Bareword: b
        Operator: 1@7 = <
        Right -> Bareword: c


    #
    # Against precedence 7: != ==
    #
    #
    # >
    #
    - Berg: a > b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c
    - Berg: a != b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # >
    #
    - Berg: a > b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? > b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ">"
        Right -> Bareword: b
    - Berg: a > b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: +
    - Berg: a+ > b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ">"
        Right -> Bareword: b
    - Berg: a > b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* > b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ">"
        Right -> Bareword: b

    #
    # <=
    #
    - Berg: a <= b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? <= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: <=
        Right -> Bareword: b
    - Berg: a <= b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: +
    - Berg: a+ <= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: <=
        Right -> Bareword: b
    - Berg: a <= b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* <= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: <=
        Right -> Bareword: b

    #
    # >=
    #
    - Berg: a >= b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? >= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ">="
        Right -> Bareword: b
    - Berg: a >= b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: +
    - Berg: a+ >= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ">="
        Right -> Bareword: b
    - Berg: a >= b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* >= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ">="
        Right -> Bareword: b

    #
    # <
    #
    - Berg: a < b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? < b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: <
        Right -> Bareword: b
    - Berg: a < b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: +
    - Berg: a+ < b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: <
        Right -> Bareword: b
    - Berg: a < b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* < b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: <
        Right -> Bareword: b


    #
    # Against precedence 9: &&
    #
    #
    # >
    #
    - Berg: a > b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 10: ?? ||
    #
    #
    # >
    #
    - Berg: a > b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 11: ->
    #
    #
    # >
    #
    - Berg: a > b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = >
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = >
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # >
    #
    - Berg: a > b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: "a > b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b > c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: "a <= b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b <= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: 1@8 = =
        Right -> Bareword: c
    - Berg: a = b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: "a >= b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b >= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: 1@8 = =
        Right -> Bareword: c
    - Berg: a = b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: "a < b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b < c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # >
    #
    - Berg: a > b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: ","
    - Berg: a, > b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ">"
        Right -> Bareword: b

    #
    # <=
    #
    - Berg: a <= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ","
    - Berg: a, <= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: <=
        Right -> Bareword: b

    #
    # >=
    #
    - Berg: a >= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ","
    - Berg: a, >= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ">="
        Right -> Bareword: b

    #
    # <
    #
    - Berg: a < b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ","
    - Berg: a, < b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: <
        Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # >
    #
    - Berg: a > b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # >
    #
    - Berg: a > b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # >
    #
    - Berg: a > b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: a <= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: a >= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: a < b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # >
    #
    - Berg: "a > b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b > c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: a > b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; > b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ">"
        Right -> Bareword: b
    - Berg: a > b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b > c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c

    #
    # <=
    #
    - Berg: "a <= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b <= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: a <= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ;
    - Berg: a; <= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: <=
        Right -> Bareword: b
    - Berg: a <= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b <= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c

    #
    # >=
    #
    - Berg: "a >= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b >= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: a >= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ;
    - Berg: a; >= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ">="
        Right -> Bareword: b
    - Berg: a >= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b >= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c

    #
    # <
    #
    - Berg: "a < b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b < c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: a < b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ;
    - Berg: a; < b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: <
        Right -> Bareword: b
    - Berg: a < b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b < c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # >
    #
    - Berg: "{a} > b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ">"
        Right -> Bareword: b
    - Berg: a > {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a > b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a > b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b > c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">"
          Right -> Bareword: c
    - Berg: (a) > b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ">"
        Right -> Bareword: b
    - Berg: a > (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a > b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ">"
          Right -> Bareword: b
        Close: )

    #
    # <=
    #
    - Berg: "{a} <= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: <=
        Right -> Bareword: b
    - Berg: a <= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a <= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Close: "}"
    - Berg: "a <= b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b <= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <=
          Right -> Bareword: c
    - Berg: (a) <= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: <=
        Right -> Bareword: b
    - Berg: a <= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <=
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a <= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: <=
          Right -> Bareword: b
        Close: )

    #
    # >=
    #
    - Berg: "{a} >= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ">="
        Right -> Bareword: b
    - Berg: a >= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a >= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Close: "}"
    - Berg: "a >= b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b >= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ">="
          Right -> Bareword: c
    - Berg: (a) >= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ">="
        Right -> Bareword: b
    - Berg: a >= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ">="
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a >= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ">="
          Right -> Bareword: b
        Close: )

    #
    # <
    #
    - Berg: "{a} < b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: <
        Right -> Bareword: b
    - Berg: a < {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a < b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Close: "}"
    - Berg: "a < b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b < c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: <
          Right -> Bareword: c
    - Berg: (a) < b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: <
        Right -> Bareword: b
    - Berg: a < (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: <
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a < b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: <
          Right -> Bareword: b
        Close: )



  #
  # Precedence 7: != ==
  #
    #
    # Against precedence 7: != ==
    #
    #
    # !=
    #
    - Berg: a != b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = !=
          Right -> Bareword: b
        Operator: 1@8-9 = !=
        Right -> Bareword: c
    - Berg: a != b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ==
        Right -> Bareword: c
    - Berg: a == b != c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "!="
        Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b == c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = ==
          Right -> Bareword: b
        Operator: 1@8-9 = ==
        Right -> Bareword: c


    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # !=
    #
    - Berg: a != b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? != b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "!="
        Right -> Bareword: b
    - Berg: a != b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: +
    - Berg: a+ != b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "!="
        Right -> Bareword: b
    - Berg: a != b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* != b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "!="
        Right -> Bareword: b

    #
    # ==
    #
    - Berg: a == b?
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "?"
    - Berg: a? == b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ==
        Right -> Bareword: b
    - Berg: a == b+
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: +
    - Berg: a+ == b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ==
        Right -> Bareword: b
    - Berg: a == b*
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "*"
    - Berg: a* == b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ==
        Right -> Bareword: b


    #
    # Against precedence 9: &&
    #
    #
    # !=
    #
    - Berg: a != b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "&&"
        Right -> Bareword: c
    - Berg: a && b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 10: ?? ||
    #
    #
    # !=
    #
    - Berg: a != b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 11: ->
    #
    #
    # !=
    #
    - Berg: a != b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # !=
    #
    - Berg: a != b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: "a != b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b != c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: 1@8 = =
        Right -> Bareword: c
    - Berg: a = b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: "a == b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b == c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: 1@8 = =
        Right -> Bareword: c
    - Berg: a = b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # !=
    #
    - Berg: a != b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ","
    - Berg: a, != b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "!="
        Right -> Bareword: b

    #
    # ==
    #
    - Berg: a == b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: ","
    - Berg: a, == b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ==
        Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # !=
    #
    - Berg: a != b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # !=
    #
    - Berg: a != b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # !=
    #
    - Berg: a != b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: a == b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # !=
    #
    - Berg: "a != b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b != c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: a != b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ;
    - Berg: a; != b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "!="
        Right -> Bareword: b
    - Berg: a != b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b != c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c

    #
    # ==
    #
    - Berg: "a == b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b == c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: a == b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: ;
    - Berg: a; == b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ==
        Right -> Bareword: b
    - Berg: a == b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b == c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # !=
    #
    - Berg: "{a} != b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "!="
        Right -> Bareword: b
    - Berg: a != {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a != b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Close: "}"
    - Berg: "a != b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b != c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "!="
          Right -> Bareword: c
    - Berg: (a) != b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "!="
        Right -> Bareword: b
    - Berg: a != (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "!="
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a != b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "!="
          Right -> Bareword: b
        Close: )

    #
    # ==
    #
    - Berg: "{a} == b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ==
        Right -> Bareword: b
    - Berg: a == {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a == b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Close: "}"
    - Berg: "a == b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b == c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ==
          Right -> Bareword: c
    - Berg: (a) == b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ==
        Right -> Bareword: b
    - Berg: a == (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ==
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a == b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ==
          Right -> Bareword: b
        Close: )



  #
  # Precedence 8: postfix.? postfix.+ postfix.*
  #
    #
    # Against precedence 8: postfix.? postfix.+ postfix.*
    #
    #
    # postfix.?
    #
    - Berg: a? ?
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = ?
        Operator: 1@4 = ?
    - Berg: a?+
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: +
    - Berg: a+?
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "?"
    - Berg: a?*
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "*"
    - Berg: a*?
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "?"

    #
    # postfix.+
    #
    - Berg: a+ +
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = +
        Operator: 1@4 = +
    - Berg: a+*
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "*"
    - Berg: a*+
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: +

    #
    # postfix.*
    #
    - Berg: a**
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = *
        Operator: 1@3 = *


    #
    # Against precedence 9: &&
    #
    #
    # postfix.?
    #
    - Berg: a && b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? && b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "&&"
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: a && b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ && b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "&&"
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: a && b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* && b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "&&"
        Right -> Bareword: b


    #
    # Against precedence 10: ?? ||
    #
    #
    # postfix.?
    #
    - Berg: a ?? b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: 1@7 = ?
    - Berg: a? ?? b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = ?
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? || b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "||"
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: a ?? b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ ?? b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ || b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "||"
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: a ?? b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* ?? b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "??"
        Right -> Bareword: b
    - Berg: a || b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* || b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "||"
        Right -> Bareword: b


    #
    # Against precedence 11: ->
    #
    #
    # postfix.?
    #
    - Berg: a -> b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? -> b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ->
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: a -> b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ -> b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ->
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: a -> b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* -> b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ->
        Right -> Bareword: b


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # postfix.?
    #
    - Berg: a += b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? += b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? *= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? /= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? %= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : b?"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: "a? : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? -= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? &&= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? ||= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = ?
    - Berg: a? ??= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = ?
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? = b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: =
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: a += b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: 1@7 = +
    - Berg: a+ += b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = +
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ *= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ /= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ %= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : b+"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: "a+ : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ -= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ &&= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ ||= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ ??= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ = b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: =
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: a += b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* += b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: +=
        Right -> Bareword: b
    - Berg: a *= b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: 1@7 = *
    - Berg: a* *= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = *
        Operator: "*="
        Right -> Bareword: b
    - Berg: a /= b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* /= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: /=
        Right -> Bareword: b
    - Berg: a %= b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* %= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "%="
        Right -> Bareword: b
    - Berg: "a : b*"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: "a* : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ":"
        Right -> Bareword: b
    - Berg: a -= b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* -= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: -=
        Right -> Bareword: b
    - Berg: a &&= b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* &&= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a ||= b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* ||= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ??= b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* ??= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "??="
        Right -> Bareword: b
    - Berg: a = b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* = b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: =
        Right -> Bareword: b


    #
    # Against precedence 13: , postfix.,
    #
    #
    # postfix.?
    #
    - Berg: a , b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? , b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ","
        Right -> Bareword: b
    - Berg: a?,
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ","
    - Berg: a,?
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "?"

    #
    # postfix.+
    #
    - Berg: a , b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ , b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ","
        Right -> Bareword: b
    - Berg: a+,
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ","
    - Berg: a,+
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: +

    #
    # postfix.*
    #
    - Berg: a , b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* , b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ","
        Right -> Bareword: b
    - Berg: a*,
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ","
    - Berg: a,*
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "*"


    #
    # Against precedence 14: &
    #
    #
    # postfix.?
    #
    - Berg: a & b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? & b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "&"
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: a & b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ & b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "&"
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: a & b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* & b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "&"
        Right -> Bareword: b


    #
    # Against precedence 15: |
    #
    #
    # postfix.?
    #
    - Berg: a | b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? | b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "|"
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: a | b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ | b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "|"
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: a | b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* | b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "|"
        Right -> Bareword: b


    #
    # Against precedence 16: call
    #
    #
    # postfix.?
    #
    - Berg: a   b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a?   b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "1@3+0 = "
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: a   b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+   b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "1@3+0 = "
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: a   b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a*   b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "1@3+0 = "
        Right -> Bareword: b


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # postfix.?
    #
    - Berg: "a \n b?"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: "a? \n b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: "\n"
        Right -> Bareword: b
    - Berg: a?;
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ;
    - Berg: a;?
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "?"
    - Berg: a ; b?
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: a? ; b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ;
        Right -> Bareword: b

    #
    # postfix.+
    #
    - Berg: "a \n b+"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: "a+ \n b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: "\n"
        Right -> Bareword: b
    - Berg: a+;
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ;
    - Berg: a;+
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: +
    - Berg: a ; b+
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: a+ ; b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ;
        Right -> Bareword: b

    #
    # postfix.*
    #
    - Berg: "a \n b*"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: "a* \n b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: "\n"
        Right -> Bareword: b
    - Berg: a*;
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ;
    - Berg: a;*
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "*"
    - Berg: a ; b*
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: a* ; b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ;
        Right -> Bareword: b


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # postfix.?
    #
    - Berg: "{a}?"
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "?"
    - Berg: "{a?}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Close: "}"
    - Berg: "a : b?"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "?"
    - Berg: "a? : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Operator: ":"
        Right -> Bareword: b
    - Berg: (a)?
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "?"
    - Berg: (a?)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: "?"
        Close: )

    #
    # postfix.+
    #
    - Berg: "{a}+"
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: +
    - Berg: "{a+}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Close: "}"
    - Berg: "a : b+"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: +
    - Berg: "a+ : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Operator: ":"
        Right -> Bareword: b
    - Berg: (a)+
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: +
    - Berg: (a+)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: +
        Close: )

    #
    # postfix.*
    #
    - Berg: "{a}*"
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "*"
    - Berg: "{a*}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Close: "}"
    - Berg: "a : b*"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: "*"
    - Berg: "a* : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Operator: ":"
        Right -> Bareword: b
    - Berg: (a)*
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "*"
    - Berg: (a*)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: "*"
        Close: )



  #
  # Precedence 9: &&
  #
    #
    # Against precedence 9: &&
    #
    #
    # &&
    #
    - Berg: a && b && c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = &&
          Right -> Bareword: b
        Operator: 1@8-9 = &&
        Right -> Bareword: c


    #
    # Against precedence 10: ?? ||
    #
    #
    # &&
    #
    - Berg: a && b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c
    - Berg: a ?? b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c


    #
    # Against precedence 11: ->
    #
    #
    # &&
    #
    - Berg: a && b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # &&
    #
    - Berg: a && b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: "a && b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b && c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = &&
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9-10 = &&
          Right -> Bareword: c
    - Berg: a && b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # &&
    #
    - Berg: a && b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: ","
    - Berg: a, && b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "&&"
        Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # &&
    #
    - Berg: a && b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: 1@8 = &
        Right -> Bareword: c
    - Berg: a & b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = &
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # &&
    #
    - Berg: a && b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # &&
    #
    - Berg: a && b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # &&
    #
    - Berg: "a && b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b && c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: a && b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; && b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "&&"
        Right -> Bareword: b
    - Berg: a && b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b && c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # &&
    #
    - Berg: "{a} && b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "&&"
        Right -> Bareword: b
    - Berg: a && {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a && b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a && b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b && c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&"
          Right -> Bareword: c
    - Berg: (a) && b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "&&"
        Right -> Bareword: b
    - Berg: a && (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a && b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&"
          Right -> Bareword: b
        Close: )



  #
  # Precedence 10: ?? ||
  #
    #
    # Against precedence 10: ?? ||
    #
    #
    # ??
    #
    - Berg: a ?? b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = ??
          Right -> Bareword: b
        Operator: 1@8-9 = ??
        Right -> Bareword: c
    - Berg: a ?? b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "||"
        Right -> Bareword: c
    - Berg: a || b ?? c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "??"
        Right -> Bareword: c

    #
    # ||
    #
    - Berg: a || b || c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = ||
          Right -> Bareword: b
        Operator: 1@8-9 = ||
        Right -> Bareword: c


    #
    # Against precedence 11: ->
    #
    #
    # ??
    #
    - Berg: a ?? b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c

    #
    # ||
    #
    - Berg: a || b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: ->
        Right -> Bareword: c
    - Berg: a -> b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # ??
    #
    - Berg: a ?? b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: "a ?? b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b ?? c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = ??
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9-10 = ??
          Right -> Bareword: c
    - Berg: a ?? b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c

    #
    # ||
    #
    - Berg: a || b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: "a || b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b || c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = ||
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9-10 = ||
          Right -> Bareword: c
    - Berg: a || b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # ??
    #
    - Berg: a ?? b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: ","
    - Berg: a, ?? b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "??"
        Right -> Bareword: b

    #
    # ||
    #
    - Berg: a || b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: ","
    - Berg: a, || b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "||"
        Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # ??
    #
    - Berg: a ?? b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c

    #
    # ||
    #
    - Berg: a || b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # ??
    #
    - Berg: a ?? b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c

    #
    # ||
    #
    - Berg: a || b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: 1@8 = |
        Right -> Bareword: c
    - Berg: a | b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = |
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # ??
    #
    - Berg: a ?? b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c

    #
    # ||
    #
    - Berg: a || b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # ??
    #
    - Berg: "a ?? b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b ?? c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: a ?? b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; ?? b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "??"
        Right -> Bareword: b
    - Berg: a ?? b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b ?? c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c

    #
    # ||
    #
    - Berg: "a || b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b || c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: a || b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; || b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "||"
        Right -> Bareword: b
    - Berg: a || b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b || c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # ??
    #
    - Berg: "{a} ?? b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "??"
        Right -> Bareword: b
    - Berg: a ?? {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a ?? b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a ?? b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b ?? c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??"
          Right -> Bareword: c
    - Berg: (a) ?? b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "??"
        Right -> Bareword: b
    - Berg: a ?? (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a ?? b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "??"
          Right -> Bareword: b
        Close: )

    #
    # ||
    #
    - Berg: "{a} || b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "||"
        Right -> Bareword: b
    - Berg: a || {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a || b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a || b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b || c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||"
          Right -> Bareword: c
    - Berg: (a) || b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "||"
        Right -> Bareword: b
    - Berg: a || (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a || b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "||"
          Right -> Bareword: b
        Close: )



  #
  # Precedence 11: ->
  #
    #
    # Against precedence 11: ->
    #
    #
    # ->
    #
    - Berg: a -> b -> c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3-4 = ->
          Right -> Bareword: b
        Operator: 1@8-9 = ->
        Right -> Bareword: c


    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # ->
    #
    - Berg: a -> b += c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: +=
        Right -> Bareword: c
    - Berg: a += b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b *= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "*="
        Right -> Bareword: c
    - Berg: a *= b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b /= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: /=
        Right -> Bareword: c
    - Berg: a /= b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b %= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "%="
        Right -> Bareword: c
    - Berg: a %= b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: "a -> b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b -> c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b -= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: -=
        Right -> Bareword: c
    - Berg: a -= b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b &&= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "&&="
        Right -> Bareword: c
    - Berg: a &&= b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b ||= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "||="
        Right -> Bareword: c
    - Berg: a ||= b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b ??= c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "??="
        Right -> Bareword: c
    - Berg: a ??= b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b = c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: =
        Right -> Bareword: c
    - Berg: a = b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # ->
    #
    - Berg: a -> b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: ","
    - Berg: a, -> b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ->
        Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # ->
    #
    - Berg: a -> b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # ->
    #
    - Berg: a -> b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # ->
    #
    - Berg: a -> b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # ->
    #
    - Berg: "a -> b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b -> c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: a -> b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: ;
    - Berg: a; -> b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ->
        Right -> Bareword: b
    - Berg: a -> b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b -> c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # ->
    #
    - Berg: "{a} -> b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ->
        Right -> Bareword: b
    - Berg: a -> {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a -> b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Close: "}"
    - Berg: "a -> b : c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Operator: ":"
        Right -> Bareword: c
    - Berg: "a : b -> c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ->
          Right -> Bareword: c
    - Berg: (a) -> b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ->
        Right -> Bareword: b
    - Berg: a -> (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ->
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a -> b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ->
          Right -> Bareword: b
        Close: )



  #
  # Precedence 12: += *= /= %= : -= &&= ||= ??= =
  #
    #
    # Against precedence 12: += *= /= %= : -= &&= ||= ??= =
    #
    #
    # +=
    #
    - Berg: a += b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-4 = +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8-9 = +=
          Right -> Bareword: c
    - Berg: a += b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: "a += b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b += c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = =
          Right -> Bareword: c
    - Berg: a = b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c

    #
    # *=
    #
    - Berg: a *= b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-4 = *=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8-9 = *=
          Right -> Bareword: c
    - Berg: a *= b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: "a *= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b *= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = =
          Right -> Bareword: c
    - Berg: a = b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c

    #
    # /=
    #
    - Berg: a /= b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-4 = /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8-9 = /=
          Right -> Bareword: c
    - Berg: a /= b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: "a /= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b /= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = =
          Right -> Bareword: c
    - Berg: a = b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c

    #
    # %=
    #
    - Berg: a %= b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-4 = %=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8-9 = %=
          Right -> Bareword: c
    - Berg: "a %= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b %= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = =
          Right -> Bareword: c
    - Berg: a = b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c

    #
    # :
    #
    - Berg: "a : b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@3 = :"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "1@7 = :"
          Right -> Bareword: c
    - Berg: "a : b -= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: "a -= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b &&= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: "a &&= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b ||= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: "a ||= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b ??= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: "a ??= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b = c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c
    - Berg: "a = b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c

    #
    # -=
    #
    - Berg: a -= b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-4 = -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8-9 = -=
          Right -> Bareword: c
    - Berg: a -= b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@8 = =
          Right -> Bareword: c
    - Berg: a = b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c

    #
    # &&=
    #
    - Berg: a &&= b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-5 = &&=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9-11 = &&=
          Right -> Bareword: c
    - Berg: a &&= b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9 = =
          Right -> Bareword: c
    - Berg: a = b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c

    #
    # ||=
    #
    - Berg: a ||= b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-5 = ||=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9-11 = ||=
          Right -> Bareword: c
    - Berg: a ||= b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9 = =
          Right -> Bareword: c
    - Berg: a = b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c

    #
    # ??=
    #
    - Berg: a ??= b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3-5 = ??=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9-11 = ??=
          Right -> Bareword: c
    - Berg: a ??= b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@9 = =
          Right -> Bareword: c
    - Berg: a = b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c

    #
    # =
    #
    - Berg: a = b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: 1@7 = =
          Right -> Bareword: c


    #
    # Against precedence 13: , postfix.,
    #
    #
    # +=
    #
    - Berg: a += b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: ","
    - Berg: a, += b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: +=
        Right -> Bareword: b

    #
    # *=
    #
    - Berg: a *= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: ","
    - Berg: a, *= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "*="
        Right -> Bareword: b

    #
    # /=
    #
    - Berg: a /= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: ","
    - Berg: a, /= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: /=
        Right -> Bareword: b

    #
    # %=
    #
    - Berg: a %= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: ","
    - Berg: a, %= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "%="
        Right -> Bareword: b

    #
    # :
    #
    - Berg: "a : b , c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: "a , b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b,"
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ","
    - Berg: "a, : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ":"
        Right -> Bareword: b

    #
    # -=
    #
    - Berg: a -= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: ","
    - Berg: a, -= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: -=
        Right -> Bareword: b

    #
    # &&=
    #
    - Berg: a &&= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: ","
    - Berg: a, &&= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "&&="
        Right -> Bareword: b

    #
    # ||=
    #
    - Berg: a ||= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: ","
    - Berg: a, ||= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "||="
        Right -> Bareword: b

    #
    # ??=
    #
    - Berg: a ??= b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: ","
    - Berg: a, ??= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "??="
        Right -> Bareword: b

    #
    # =
    #
    - Berg: a = b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: a , b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c
    - Berg: a = b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: ","
    - Berg: a, = b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: =
        Right -> Bareword: b


    #
    # Against precedence 14: &
    #
    #
    # +=
    #
    - Berg: a += b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c

    #
    # *=
    #
    - Berg: a *= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c

    #
    # /=
    #
    - Berg: a /= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c

    #
    # %=
    #
    - Berg: a %= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c

    #
    # :
    #
    - Berg: "a : b & c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: "a & b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c

    #
    # -=
    #
    - Berg: a -= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c

    #
    # &&=
    #
    - Berg: a &&= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: 1@9 = &
        Right -> Bareword: c
    - Berg: a & b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = &
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c

    #
    # ||=
    #
    - Berg: a ||= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c

    #
    # ??=
    #
    - Berg: a ??= b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c

    #
    # =
    #
    - Berg: a = b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # +=
    #
    - Berg: a += b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c

    #
    # *=
    #
    - Berg: a *= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c

    #
    # /=
    #
    - Berg: a /= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c

    #
    # %=
    #
    - Berg: a %= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c

    #
    # :
    #
    - Berg: "a : b | c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: "a | b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c

    #
    # -=
    #
    - Berg: a -= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c

    #
    # &&=
    #
    - Berg: a &&= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c

    #
    # ||=
    #
    - Berg: a ||= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: 1@9 = |
        Right -> Bareword: c
    - Berg: a | b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: 1@3 = |
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c

    #
    # ??=
    #
    - Berg: a ??= b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c

    #
    # =
    #
    - Berg: a = b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # +=
    #
    - Berg: a += b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c

    #
    # *=
    #
    - Berg: a *= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c

    #
    # /=
    #
    - Berg: a /= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c

    #
    # %=
    #
    - Berg: a %= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c

    #
    # :
    #
    - Berg: "a : b   c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: "a   b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c

    #
    # -=
    #
    - Berg: a -= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: "1@7+0 = "
        Right -> Bareword: c
    - Berg: a   b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c

    #
    # &&=
    #
    - Berg: a &&= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: "1@8+0 = "
        Right -> Bareword: c
    - Berg: a   b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c

    #
    # ||=
    #
    - Berg: a ||= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: "1@8+0 = "
        Right -> Bareword: c
    - Berg: a   b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c

    #
    # ??=
    #
    - Berg: a ??= b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: "1@8+0 = "
        Right -> Bareword: c
    - Berg: a   b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c

    #
    # =
    #
    - Berg: a = b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # +=
    #
    - Berg: "a += b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b += c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: a += b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: ;
    - Berg: a; += b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: +=
        Right -> Bareword: b
    - Berg: a += b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b += c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c

    #
    # *=
    #
    - Berg: "a *= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b *= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: a *= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: ;
    - Berg: a; *= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "*="
        Right -> Bareword: b
    - Berg: a *= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b *= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c

    #
    # /=
    #
    - Berg: "a /= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b /= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: a /= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: ;
    - Berg: a; /= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: /=
        Right -> Bareword: b
    - Berg: a /= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b /= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c

    #
    # %=
    #
    - Berg: "a %= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b %= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: a %= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: ;
    - Berg: a; %= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "%="
        Right -> Bareword: b
    - Berg: a %= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b %= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c

    #
    # :
    #
    - Berg: "a : b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b;"
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ;
    - Berg: "a; : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ":"
        Right -> Bareword: b
    - Berg: "a : b ; c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: "a ; b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c

    #
    # -=
    #
    - Berg: "a -= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b -= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: a -= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: ;
    - Berg: a; -= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: -=
        Right -> Bareword: b
    - Berg: a -= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b -= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c

    #
    # &&=
    #
    - Berg: "a &&= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b &&= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: a &&= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: ;
    - Berg: a; &&= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a &&= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b &&= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c

    #
    # ||=
    #
    - Berg: "a ||= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b ||= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: a ||= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: ;
    - Berg: a; ||= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ||= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b ||= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c

    #
    # ??=
    #
    - Berg: "a ??= b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b ??= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: a ??= b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: ;
    - Berg: a; ??= b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "??="
        Right -> Bareword: b
    - Berg: a ??= b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b ??= c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c

    #
    # =
    #
    - Berg: "a = b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b = c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c
    - Berg: a = b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: ;
    - Berg: a; = b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: =
        Right -> Bareword: b
    - Berg: a = b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b = c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # +=
    #
    - Berg: "{a} += b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: +=
        Right -> Bareword: b
    - Berg: a += {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a += b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Close: "}"
    - Berg: "a += b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b += c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: +=
          Right -> Bareword: c
    - Berg: (a) += b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: +=
        Right -> Bareword: b
    - Berg: a += (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: +=
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a += b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: +=
          Right -> Bareword: b
        Close: )

    #
    # *=
    #
    - Berg: "{a} *= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "*="
        Right -> Bareword: b
    - Berg: a *= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a *= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Close: "}"
    - Berg: "a *= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b *= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "*="
          Right -> Bareword: c
    - Berg: (a) *= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "*="
        Right -> Bareword: b
    - Berg: a *= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "*="
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a *= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "*="
          Right -> Bareword: b
        Close: )

    #
    # /=
    #
    - Berg: "{a} /= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: /=
        Right -> Bareword: b
    - Berg: a /= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a /= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Close: "}"
    - Berg: "a /= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b /= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: /=
          Right -> Bareword: c
    - Berg: (a) /= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: /=
        Right -> Bareword: b
    - Berg: a /= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: /=
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a /= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: /=
          Right -> Bareword: b
        Close: )

    #
    # %=
    #
    - Berg: "{a} %= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "%="
        Right -> Bareword: b
    - Berg: a %= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a %= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Close: "}"
    - Berg: "a %= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b %= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "%="
          Right -> Bareword: c
    - Berg: (a) %= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "%="
        Right -> Bareword: b
    - Berg: a %= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "%="
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a %= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "%="
          Right -> Bareword: b
        Close: )

    #
    # :
    #
    - Berg: "{a} : b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ":"
        Right -> Bareword: b
    - Berg: "a : {b}"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a : b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a : b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@3 = :"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "1@7 = :"
          Right -> Bareword: c
    - Berg: "(a) : b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ":"
        Right -> Bareword: b
    - Berg: "a : (b)"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: "(a : b)"
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Close: )

    #
    # -=
    #
    - Berg: "{a} -= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: -=
        Right -> Bareword: b
    - Berg: a -= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a -= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Close: "}"
    - Berg: "a -= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b -= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: -=
          Right -> Bareword: c
    - Berg: (a) -= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: -=
        Right -> Bareword: b
    - Berg: a -= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: -=
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a -= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: -=
          Right -> Bareword: b
        Close: )

    #
    # &&=
    #
    - Berg: "{a} &&= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a &&= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a &&= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Close: "}"
    - Berg: "a &&= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b &&= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&&="
          Right -> Bareword: c
    - Berg: (a) &&= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "&&="
        Right -> Bareword: b
    - Berg: a &&= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&&="
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a &&= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "&&="
          Right -> Bareword: b
        Close: )

    #
    # ||=
    #
    - Berg: "{a} ||= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ||= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a ||= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Close: "}"
    - Berg: "a ||= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b ||= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "||="
          Right -> Bareword: c
    - Berg: (a) ||= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "||="
        Right -> Bareword: b
    - Berg: a ||= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "||="
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a ||= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "||="
          Right -> Bareword: b
        Close: )

    #
    # ??=
    #
    - Berg: "{a} ??= b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "??="
        Right -> Bareword: b
    - Berg: a ??= {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a ??= b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Close: "}"
    - Berg: "a ??= b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b ??= c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "??="
          Right -> Bareword: c
    - Berg: (a) ??= b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "??="
        Right -> Bareword: b
    - Berg: a ??= (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "??="
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a ??= b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "??="
          Right -> Bareword: b
        Close: )

    #
    # =
    #
    - Berg: "{a} = b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: =
        Right -> Bareword: b
    - Berg: a = {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a = b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Close: "}"
    - Berg: "a = b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b = c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: =
          Right -> Bareword: c
    - Berg: (a) = b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: =
        Right -> Bareword: b
    - Berg: a = (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: =
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a = b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: =
          Right -> Bareword: b
        Close: )



  #
  # Precedence 13: , postfix.,
  #
    #
    # Against precedence 13: , postfix.,
    #
    #
    # ,
    #
    - Berg: a , b , c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = ,
          Right -> Bareword: b
        Operator: 1@7 = ,
        Right -> Bareword: c
    - Berg: a , b,
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = ,
          Right -> Bareword: b
        Operator: 1@6 = ,
    - Berg: a, , b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = ,
        Operator: 1@4 = ,
        Right -> Bareword: b

    #
    # postfix.,
    #
    - Berg: a,,
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = ,
        Operator: 1@3 = ,


    #
    # Against precedence 14: &
    #
    #
    # ,
    #
    - Berg: a , b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: a & b , c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ","
          Right -> Bareword: c

    #
    # postfix.,
    #
    - Berg: a & b,
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ","
    - Berg: a, & b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "&"
        Right -> Bareword: b


    #
    # Against precedence 15: |
    #
    #
    # ,
    #
    - Berg: a , b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b , c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ","
          Right -> Bareword: c

    #
    # postfix.,
    #
    - Berg: a | b,
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ","
    - Berg: a, | b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: "|"
        Right -> Bareword: b


    #
    # Against precedence 16: call
    #
    #
    # ,
    #
    - Berg: a , b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b , c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ","
          Right -> Bareword: c

    #
    # postfix.,
    #
    - Berg: a   b,
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ","
    - Berg: a,   b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> Bareword: b


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # ,
    #
    - Berg: "a , b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b , c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ","
          Right -> Bareword: c
    - Berg: a , b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Operator: ;
    - Berg: a; , b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ","
        Right -> Bareword: b
    - Berg: a , b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b , c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ","
          Right -> Bareword: c

    #
    # postfix.,
    #
    - Berg: "a \n b,"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ","
    - Berg: "a, \n b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> Bareword: b
    - Berg: a,;
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ;
    - Berg: a;,
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ","
    - Berg: a ; b,
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> PostfixOperation:
          Left -> Bareword: b
          Operator: ","
    - Berg: a, ; b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ;
        Right -> Bareword: b


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # ,
    #
    - Berg: "{a} , b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ","
        Right -> Bareword: b
    - Berg: a , {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a , b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Close: "}"
    - Berg: "a , b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b , c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ","
        Right -> Bareword: c
    - Berg: (a) , b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ","
        Right -> Bareword: b
    - Berg: a , (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ","
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a , b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ","
          Right -> Bareword: b
        Close: )

    #
    # postfix.,
    #
    - Berg: "{a},"
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ","
    - Berg: "{a,}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Close: "}"
    - Berg: "a : b,"
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ","
    - Berg: "a, : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Operator: ":"
        Right -> Bareword: b
    - Berg: (a),
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ","
    - Berg: (a,)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: ","
        Close: )



  #
  # Precedence 14: &
  #
    #
    # Against precedence 14: &
    #
    #
    # &
    #
    - Berg: a & b & c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = &
          Right -> Bareword: b
        Operator: 1@7 = &
        Right -> Bareword: c


    #
    # Against precedence 15: |
    #
    #
    # &
    #
    - Berg: a & b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: a | b & c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&"
          Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # &
    #
    - Berg: a & b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b & c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&"
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # &
    #
    - Berg: "a & b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b & c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&"
          Right -> Bareword: c
    - Berg: a & b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; & b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "&"
        Right -> Bareword: b
    - Berg: a & b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "&"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b & c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "&"
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # &
    #
    - Berg: "{a} & b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "&"
        Right -> Bareword: b
    - Berg: a & {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a & b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "&"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a & b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b & c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "&"
        Right -> Bareword: c
    - Berg: (a) & b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "&"
        Right -> Bareword: b
    - Berg: a & (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "&"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a & b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "&"
          Right -> Bareword: b
        Close: )



  #
  # Precedence 15: |
  #
    #
    # Against precedence 15: |
    #
    #
    # |
    #
    - Berg: a | b | c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = |
          Right -> Bareword: b
        Operator: 1@7 = |
        Right -> Bareword: c


    #
    # Against precedence 16: call
    #
    #
    # |
    #
    - Berg: a | b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "|"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: a   b | c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "|"
          Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # |
    #
    - Berg: "a | b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "|"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b | c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "|"
          Right -> Bareword: c
    - Berg: a | b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "|"
          Right -> Bareword: b
        Operator: ;
    - Berg: a; | b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: "|"
        Right -> Bareword: b
    - Berg: a | b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "|"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b | c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "|"
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # |
    #
    - Berg: "{a} | b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "|"
        Right -> Bareword: b
    - Berg: a | {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a | b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "|"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a | b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b | c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "|"
        Right -> Bareword: c
    - Berg: (a) | b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "|"
        Right -> Bareword: b
    - Berg: a | (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "|"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a | b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "|"
          Right -> Bareword: b
        Close: )



  #
  # Precedence 16: call
  #
    #
    # Against precedence 16: call
    #
    #
    # call
    #
    - Berg: a   b   c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "1@2+0 = "
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c


    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # call
    #
    - Berg: "a   b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "1@2+0 = "
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "a \n b   c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "2@3+0 = "
          Right -> Bareword: c
    - Berg: a   b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "1@2+0 = "
          Right -> Bareword: b
        Operator: ;
    - Berg: a;   b
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> Bareword: b
    - Berg: a   b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "1@2+0 = "
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: a ; b   c
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "1@6+0 = "
          Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # call
    #
    - Berg: "{a}   b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "1@4+0 = "
        Right -> Bareword: b
    - Berg: a   {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a   b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "1@3+0 = "
          Right -> Bareword: b
        Close: "}"
    - Berg: "a   b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b   c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "1@6+0 = "
        Right -> Bareword: c
    - Berg: (a)   b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "1@4+0 = "
        Right -> Bareword: b
    - Berg: a   (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@2+0 = "
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a   b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "1@3+0 = "
          Right -> Bareword: b
        Close: )



  #
  # Precedence 17: "\n" postfix.; ;
  #
    #
    # Against precedence 17: "\n" postfix.; ;
    #
    #
    # "\n"
    #
    - Berg: "a \n b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "1@3 = \n"
          Right -> Bareword: b
        Operator: "2@4 = \n"
        Right -> Bareword: c
    - Berg: "a \n b;"
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "\n"
          Right -> Bareword: b
        Operator: ;
    - Berg: "a; \n b"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> Bareword: b
    - Berg: "a \n b ; c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: "\n"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: "a ; b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ;
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c

    #
    # postfix.;
    #
    - Berg: a;;
      Ast -> PostfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = ;
        Operator: 1@3 = ;
    - Berg: a ; b;
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = ;
          Right -> Bareword: b
        Operator: 1@6 = ;
    - Berg: a; ; b
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: 1@2 = ;
        Operator: 1@4 = ;
        Right -> Bareword: b

    #
    # ;
    #
    - Berg: a ; b ; c
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: 1@3 = ;
          Right -> Bareword: b
        Operator: 1@7 = ;
        Right -> Bareword: c


    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # "\n"
    #
    - Berg: "{a} \n b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: "\n"
        Right -> Bareword: b
    - Berg: "a \n {b}"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a \n b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "\n"
          Right -> Bareword: b
        Close: "}"
    - Berg: "a \n b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b \n c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: "\n"
        Right -> Bareword: c
    - Berg: "(a) \n b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: "\n"
        Right -> Bareword: b
    - Berg: "a \n (b)"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "\n"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: "(a \n b)"
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: "\n"
          Right -> Bareword: b
        Close: )

    #
    # postfix.;
    #
    - Berg: "{a};"
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ;
    - Berg: "{a;}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Close: "}"
    - Berg: "a : b;"
      Ast -> PostfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ;
    - Berg: "a; : b"
      Ast -> InfixOperation:
        Left -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Operator: ":"
        Right -> Bareword: b
    - Berg: (a);
      Ast -> PostfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ;
    - Berg: (a;)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> PostfixOperation:
          Left -> Bareword: a
          Operator: ;
        Close: )

    #
    # ;
    #
    - Berg: "{a} ; b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ;
        Right -> Bareword: b
    - Berg: a ; {b}
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a ; b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ;
          Right -> Bareword: b
        Close: "}"
    - Berg: "a ; b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: ":"
          Right -> Bareword: c
    - Berg: "a : b ; c"
      Ast -> InfixOperation:
        Left -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Operator: ;
        Right -> Bareword: c
    - Berg: (a) ; b
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ;
        Right -> Bareword: b
    - Berg: a ; (b)
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ;
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: (a ; b)
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ;
          Right -> Bareword: b
        Close: )



  #
  # Precedence 18: open.{ open.indent open.(
  #
    #
    # Against precedence 18: open.{ open.indent open.(
    #
    #
    # open.{
    #
    - Berg: "{{a}}"
      Ast -> DelimitedOperation:
        Open: 1@1 = {
        Expression -> DelimitedOperation:
          Open: 1@2 = {
          Expression -> Bareword: a
          Close: 1@4 = }
        Close: 1@5 = }
    - Berg: "{a} : b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Operator: ":"
        Right -> Bareword: b
    - Berg: "a : {b}"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: b
          Close: "}"
    - Berg: "{a : b}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Close: "}"
    - Berg: "{(a)}"
      Ast -> DelimitedOperation:
        Open: "{"
        Expression -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Close: "}"
    - Berg: ({a})
      Ast -> DelimitedOperation:
        Open: (
        Expression -> DelimitedOperation:
          Open: "{"
          Expression -> Bareword: a
          Close: "}"
        Close: )

    #
    # open.indent
    #
    - Berg: "a : b : c"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: "1@3 = :"
        Right -> InfixOperation:
          Left -> Bareword: b
          Operator: "1@7 = :"
          Right -> Bareword: c
    - Berg: "(a) : b"
      Ast -> InfixOperation:
        Left -> DelimitedOperation:
          Open: (
          Expression -> Bareword: a
          Close: )
        Operator: ":"
        Right -> Bareword: b
    - Berg: "a : (b)"
      Ast -> InfixOperation:
        Left -> Bareword: a
        Operator: ":"
        Right -> DelimitedOperation:
          Open: (
          Expression -> Bareword: b
          Close: )
    - Berg: "(a : b)"
      Ast -> DelimitedOperation:
        Open: (
        Expression -> InfixOperation:
          Left -> Bareword: a
          Operator: ":"
          Right -> Bareword: b
        Close: )

    #
    # open.(
    #
    - Berg: ((a))
      Ast -> DelimitedOperation:
        Open: 1@1 = (
        Expression -> DelimitedOperation:
          Open: 1@2 = (
          Expression -> Bareword: a
          Close: 1@4 = )
        Close: 1@5 = )



